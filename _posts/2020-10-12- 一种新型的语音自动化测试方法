---
layout:     post
title:      一种新型的语音自动化测试方法
subtitle:   语音自动化测试
date:       2020-10-12
author:     Maomao
header-img: img/post-bg-android.jpg
catalog: true
tags:
    - 测试技术
---


## 一种新型的语音自动化测试方法




### 1.现有语音自动化测试技术
现有的语音自动化测试方法主要是通过电脑播放测试音频，声音通过空气传播到被测设备的麦克风，被测设备拾音后执行相关的指令，达到测试效果。如下图所示：
 ![enter image description here](https://github.com/limaolliang/limaolliang.github.io/blob/master/img/post-res-AudioTest/1.png)


目前语音自动化测试主要使用喇叭播放测试音频，被测设备通过麦克风收音，从而达到语音测试的目标，但是这种方法存在以下几个问题

 1. 麦克风收音不仅仅会收到喇叭播放的声音，同时也会收到空气中的各种声音，这些噪音会大大降低语音自动化测试的成功率
 2. 喇叭播放声音会产生噪声污染，不适合在办公室部署；另外，多个设备需要同时测试的时候，喇叭播放的声音会产生交叉干扰。

本文章提出一种基于音频电流信号传输的语音自动化测试方案，该方法主要分为两部，第一步是将音频输出的电线和麦克风的线相接，使得音频的电流信号可以传入到被测设备上，第二步通过加装电阻和电脑的音量调节，使得传输的音频的电平和麦克风输出电平一致，以达到最大的语音识别效果。主要解决了声音在空气中传播可能导致的问题，同时尽可能的将测试的场景贴近用户对语音的使用。

## 2.改进后的语音自动化测试方案
本方案主要应用于语音的功能自动化测试和性能自动化测试，也可以协助构建对于需要排除外界干扰的语音测试场景：
![enter image description here](https://github.com/limaolliang/limaolliang.github.io/blob/master/img/post-res-AudioTest/2.png)
图 语音自动化测试部署示意图

 1. 管理设备和服务器，服务器和测试执行设备之间使用网络相连
 2. 测试执行设备和测试设备之间除了必要的数据线连接外，还有两条的音频线的连接：其中测试执行设备的左声道连接电容，和被测设备麦克风线的第一输入端连接；测试执行设备的右声道连接电阻，和被测设备麦克风线的第二输入端连接。

执行设备和被测设备的接线方法如下：
![enter image description here](https://github.com/limaolliang/limaolliang.github.io/blob/master/img/post-res-AudioTest/3.png)
图 执行设备和被测设备的接线示意图
具体而言：

 1. 测试设备和被测设备通过数据线连接，用于传输消息
 2. 测试执行设备的左声道输出线和被测设备的麦克风第一输入端连接，中间加装一个50V电阻
 3. 测试执行设备的右声道输出线和被测设备的麦克风第二输入端连接。

在测试执行设备和被测设备之间连接完成后，将其部署在整体的自动化测试流程中，语音自动化测试具体流程图如下：
![enter image description here](https://github.com/limaolliang/limaolliang.github.io/blob/master/img/post-res-AudioTest/4.png)
图 语音自动化测试序列图
具体而言，整体测试流程包括：

 1. 客户端下发启动测试命令，将测试任务详细参数传给服务端，服务端在接收到命令之后响应
 2. 服务端调度执行设备，选取当前空闲的执行设备，将测试任务下发至执行设备上
 3. 执行设备接收到测试任务后，检查和被测设备（车机或者手机）的连接状态，开始执行测试任务。
 4. 任务执行过程中，涉及到语音操作测试的步骤，执行设备上会调用python的音频播放软件播放已经录制好的音频，或者使用文字转语音的库直接将文字转成音频流，通过音频输出的左右声道线传输到被测设备的麦克风输入线上。
 5. 任务测试过程中，被测设备会将测试过程中的数据通过adb线回传到执行设备中，执行设备通过此消息判断执行的结果。
 6. 任务执行完成后，执行设备将测试结果回传到服务端
 7. 任务执行完成后，用户可以在客户端查看本次测试任务的执行情况，包括执行的结果，执行的日志，性能数据等等。

### 3.改进后方案收益

改进后的语音自动化方案，在语音的识别成功率上有了一个比较大的提升，而且不受外部声音的干扰，整体自动化运行非常稳定。
![enter image description here](https://github.com/limaolliang/limaolliang.github.io/blob/master/img/post-res-AudioTest/5.png)
测试效果对比：采用音频接线方式的语音自动化测试方案可以大大提高测试的成功率，由原有的80%识别成功率提升到98%。


### 4.一些延伸的思考

现有的自动化方案为提前录制好语音自动化所需音频文件，然后通过一些音频播放的库来实现（现在用的是pygame），这个过程整体比较复杂，如果可以直接调用一些文字转tts的库，case的设计和实现将会简单非常多，在python中也有相关的库支持（比如pyttsx），但实际播放的效果会有一些比较大的失真，多音字的badcase也没有办法避免。

本方案主要实现的是语音自动化的触发，实现了语音功能的调用，但是断言部分并没有实现，后续可以将此部分和语音研发对接上，实现语音自动化的断言。
